@page "/contacts"
@using ContactManager.Shared.Models
@using ContactManager.Client.Services
@inject ContactService ContactService

<h3>Contacts</h3>

<!-- Display message if no contacts are available -->
@if (contacts == null)
{
    <p><em>Loading contacts...</em></p>
}
else
{
    <!-- Table to list contacts -->
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Email</th>
                <th>Category</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var contact in contacts)
            {
                <tr>
                    <td>@contact.FirstName @contact.LastName</td>
                    <td>@contact.Email</td>
                    <td>@contact.Category</td>
                    <td>
                        <a href="/contactdetails/@contact.Id">Details</a>
                        <a href="/editcontact/@contact.Id">Edit</a>
                        <a href="/deletecontact/@contact.Id">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <a href="/createcontact" class="btn btn-primary">Create New Contact</a>
}

@code {
    private IEnumerable<Contact> contacts;

    // Load contacts on initialization
    protected override async Task OnInitializedAsync()
    {
        contacts = await ContactService.GetContacts();
    }
}